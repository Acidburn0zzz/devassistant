.SH GITHUB INTEGRATION
If github option is used for export projects to the GitHub repository then
user has to have already created account on the GitHub server.
Without that it is not possible to upload projects on the GitHub server

.SH DESCRIPTION
.B Developer assistant
is based on idea of per-{language/framework/...} "assistants" with hierarchical structure like this:

                  MainAssistant
                  /           \\
                 /             \\
              Python          Ruby
              /   \\            / \\
             /     \\          /   \\
          Django  Flask    Rails Sinatra

The basic task of each assistant is to create a project in location specified by
.B -n name
(either relative or absolute path) and install its dependencies via \fBYum\fP.
Optionally, if any environment setup is required,
.B devassistant
does that as well.
Most of the assistants have common arguments (see below), but there may also be some language specific options in some of the assistants.

.SH LANGUAGE SUPPORT
Currently supported languages are:
.IP
C/C++ language
.IP
Python language (Django, Flask and a custom Python library project)
.IP
Java language (JSF and a custom Maven project)

.SH COMMON OPTIONS
.TP
.B \-h --help
print help for selected assistant
.TP
.B \-n --name
name of the project (relative or absolute path).
.TP
.B \-e --eclipse
import project into
.I eclipse 
environment. Uses ~/workspace workspace by default, which can be overriden by specifying another path.
.TP
.B \-g --github <username>
create a GitHub repo and push the initial sources there. Uses current username, which can be overriden by specifying a different GitHub username. The GitHub projectname is taken from
.B name
parameter..B \-b --build
generate a SPEC file, SRPM and mock-build RPM.
.TP
.B \-v --vim
install vim settings specific for this language (backs up your original vim settings)
.TP

.SH "SEE ALSO"
.BR devassistant-modify (1)
