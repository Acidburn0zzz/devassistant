c: 
    fullname: C Language Tool

    dependencies:
    - default:
      - rpm: ['gcc', 'gcc-c++','glibc-devel', 'automake', 'autoconf','valgrind','gdb','ddd','strace']
    - _build:
      - rpm: ['rpm-build','mock','eclipse-rpm-editor']
    - _idesettings:
      - rpm: ['vim', 'gvim','eclipse-mylyn-context-cdt','eclipse-egit','eclipse-cdt','eclipse-cdt-parsers','eclipse-cdt-sdk']

    args:
      name:
        flags:
        - -n
        - --name
        help:
            'Name of project to create'

      build:
        flags:
        - -b
        - --build
        help:
            'This will create SRPM and RPM packages. Specify distribution which you want to use like fedora fedora-19-i386'

      idesettings:
        flags:
        - -i
        - --idesettings
        help:
            'This will install editors'

      eclipse:
        flags:
        - -e
        - --eclipse
        help:
            'Specify Eclipse workspage directory where project will be stored'

      github:
        flags:
        - -g
        - --github
        help:
            'This will create a Git Hub repository.
            First create repository on git hub.
            Actually now creating repository on GitHub server from command line is not supported'

    files:
      csources: &csources
        source: c/

    run:
    - log_i: 'Copying c source tree to project destination'
    - cl: cp -r *csources $name
    - dda_c: $name
    - cl: cd $name
    - cl: git init
    - cl: git add .
    - cl: git commit -m "initial_commit"
    - log_i: 'Run autoreconf'
    - cl_f: autoreconf --install
    - log_i: 'Run configure script'
    - cl_f: ./configure
    - log_i: 'Compilation sources'
    - cl_f: make
    - log_i: 'Calling make distcheck for creating tar ball'
    - cl_f: make distcheck # will create distribution tar ball for later on usage
    - if $github:
        - log_i: 'Creating repository on GitHub'
        - github: register
        - log_i: 'Checking status of local git'
        - cl_f: git status
        - log_i: 'Push local git respository on GitHub'
        - github: remote

    run_eclipse:
    - log_i: 'Creating eclipse project from command line'
    - if not ls $name:
        - log_i: 'Project was not created yet. It will be created now.'
        - run: run
        - cl: cd ..
    - cl: mkdir -p $eclipse/$name
    - cl: sed -i s|<name>cdevelassistant<|<name>$name<| $name/.eclipseproject
    - cl: mv $name/.eclipseproject $name/.project
    - cl: cp $name/.project $eclipse/$name/.project
    - cl: cp $name/.cproject $eclipse/$name/.cproject
    - cl: cp $name/.autotools $eclipse/$name/.autotools
    - cl: eclipse -nosplash -application org.eclipse.cdt.managedbuilder.core.headlessbuild -import ./$name 
    - log_i: 'Import to Eclipse is done.'
    - log_i: 'Start eclipse for developping.'


    run_build:
    - log_i: 'Creating spec file'
    - cl: cd $name
    - cl: rpmdev-setuptree
    - cl: rm -f ~/rpmbuild/SPECS/*
    - cl: cp cdevelopmenttool-1.0.tar.gz ~/rpmbuild/SOURCES
    - cl: cp *specfile ~/rpmbuild/SPECS
    - cl: cd ~/rpmbuild/SPECS
    - cl_f: sudo yum-builddep ~/rpmbuild/SPECS/cdevelopmenttool.spec
    - log_i: 'Creating RPM from tarball'
    - cl_f: rpmbuild -ba cdevelopmenttool.spec
    - log_i: 'Creating RPM from SRPM over mock'
    - cl_f: rpmbuild -bs cdevelopmenttool.spec
    - cl_f: mock -r $build ~/rpmbuild/SRPMS/cdevelopmenttool-1.0-0.src.rpm
